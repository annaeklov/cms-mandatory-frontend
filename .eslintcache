[{"/Users/annaeklov/Documents/Sites/frontend/src/index.js":"1","/Users/annaeklov/Documents/Sites/frontend/src/reportWebVitals.js":"2","/Users/annaeklov/Documents/Sites/frontend/src/App.js":"3","/Users/annaeklov/Documents/Sites/frontend/src/components/Movies.js":"4","/Users/annaeklov/Documents/Sites/frontend/src/components/Add.js":"5","/Users/annaeklov/Documents/Sites/frontend/src/components/Movie.js":"6","/Users/annaeklov/Documents/Sites/frontend/src/components/Form.js":"7","/Users/annaeklov/Documents/Sites/frontend/src/components/Edit.js":"8"},{"size":500,"mtime":1608634401865,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1608634401867,"results":"11","hashOfConfig":"10"},{"size":2366,"mtime":1610123781845,"results":"12","hashOfConfig":"10"},{"size":4045,"mtime":1610283793699,"results":"13","hashOfConfig":"10"},{"size":4402,"mtime":1610283793699,"results":"14","hashOfConfig":"10"},{"size":167,"mtime":1609147259651,"results":"15","hashOfConfig":"10"},{"size":4070,"mtime":1610273865611,"results":"16","hashOfConfig":"10"},{"size":4346,"mtime":1610283793699,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"6afi7j",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"20"},"/Users/annaeklov/Documents/Sites/frontend/src/index.js",[],["40","41"],"/Users/annaeklov/Documents/Sites/frontend/src/reportWebVitals.js",[],"/Users/annaeklov/Documents/Sites/frontend/src/App.js",["42","43"],"import \"./App.css\";\nimport react, { useState, useEffect } from \"react\";\nimport { Route, BrowserRouter, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Movies from \"./components/Movies\";\nimport Add from \"./components/Add\";\nimport Movie from \"./components/Movie\";\nimport Edit from \"./components/Edit\";\nimport styled from \"styled-components\";\n\nconst AppContainer = styled.div`\n  box-sizing: border-box;\n  background-color: #d0e2eb;\n  height: 97vh;\n  width: 100vw;\n  font-family: \"Roboto\", sans-serif;\n  main {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: auto;\n    height: 100%;\n    min-height: 97vh;\n  }\n  .divHeader {\n    background-color: #a3c3d8;\n    width: 100%;\n    height: 22%;\n    position: relative;\n    align: center;\n    box-shadow: 0px 10px 10px -7px #80a4c0;\n    border-radius: 0px 0px 15px 15px;\n\n    button {\n      position: absolute;\n      bottom: 20px;\n      right: 15px;\n      width: 116px;\n      height: 49px;\n      box-shadow: 0px 10px 10px -7px #80a4c0;\n      background-color: #d0e2eb;\n      border-radius: 15px;\n      border: 2px solid #a3c3d8;\n      display: inline-block;\n      cursor: pointer;\n      color: #456289;\n      font-size: 16px;\n      padding: 6px 12px;\n      text-decoration: none;\n    }\n    button:hover {\n      background-color: #80a4c0;\n      color: #d0e2eb;\n    }\n\n    h1 {\n      text-align: center;\n      margin-top: 40px;\n      color: #1d1b28;\n      font-size: 50px;\n    }\n  }\n`;\n\nfunction App() {\n  const [token, setToken] = useState(\"\");\n  const API_jwt = \"http://localhost:8888/aewordpress/wp-json/jwt-auth/v1/token\";\n\n  function getToken() {\n    let login = {\n      username: \"annaadmin\",\n      password: \"annaadmin\",\n    };\n    axios.post(API_jwt, login).then((resp) => {\n      setToken(resp.data.token);\n    });\n    if (token) {\n      <Redirect to=\"/\" />;\n    }\n  }\n\n  useEffect(() => {\n    getToken();\n  }, []);\n\n  return (\n    <BrowserRouter>\n      <AppContainer>\n        <Route exact path=\"/\" component={() => <Movies token={token} />} />\n        <Route path=\"/add\" component={() => <Add token={token} />} />\n        <Route path=\"/movie/:id\" component={() => <Movie token={token} />} />\n        <Route path=\"/edit/:id\" component={() => <Edit token={token} />} />\n      </AppContainer>{\" \"}\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/annaeklov/Documents/Sites/frontend/src/components/Movies.js",["44","45","46","47"],"/Users/annaeklov/Documents/Sites/frontend/src/components/Add.js",["48","49","50"],"import react, { useState, useEffect } from \"react\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Form from \"./Form\";\nimport styled from \"styled-components\";\n\nfunction Add({ token }) {\n  const [genres, setGenres] = useState([]);\n  const [checkedGenres, setCheckedGenres] = useState([]);\n  const [isAdded, setIsAdded] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [newMovie, setNewMovie] = useState({\n    title: \"\",\n    status: \"publish\",\n    recension: \"\",\n    rating: \"\",\n  });\n\n  let history = useHistory();\n\n  useEffect(() => {\n    getGenresApi();\n  }, []);\n\n  function getGenresApi() {\n    axios\n      .get(\"http://localhost:8888/aewordpress/wp-json/wp/v2/genres\")\n      .then((response) => {\n        setGenres(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  function postNewMovie(token) {\n    let item = {\n      title: newMovie.title,\n      status: \"publish\",\n      genres: checkedGenres,\n      fields: {\n        genrecustom: checkedGenres,\n        recension: newMovie.recension,\n        rating: newMovie.rating,\n      },\n    };\n\n    console.log(\"item i POST\", item);\n\n    axios\n      .post(\"http://localhost:8888/aewordpress/wp-json/wp/v2/movies/\", item, {\n        headers: { Authorization: \"Bearer\" + token },\n      })\n      .then((resp) => {\n        console.log(resp.data);\n        if (resp.status === 201) {\n          setIsAdded(true);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  function onChangeGenre(e) {\n    const isChecked = e.target.checked;\n    if (isChecked) {\n      let idInt = parseInt(e.target.id);\n      setCheckedGenres([...checkedGenres, idInt]);\n    } else if (!isChecked) {\n      let filteredGenre = checkedGenres.filter((genre) => {\n        return genre !== parseInt(e.target.id);\n      });\n      setCheckedGenres(filteredGenre);\n      console.log(checkedGenres);\n    }\n  }\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setNewMovie({ ...newMovie, [name]: value });\n  }\n\n  function onClickAddMovie(e) {\n    e.preventDefault();\n    console.log(checkedGenres.length);\n    if (checkedGenres.length > 0) {\n      console.log(\"tom\");\n      if (newMovie.title.trim() === \"\" || newMovie.recension.trim() === \"\") {\n        return setErrorMsg(\"emptyInput\");\n      }\n\n      postNewMovie(token);\n    } else {\n      setErrorMsg(\"checkbox\");\n    }\n  }\n\n  function redirect() {\n    history.push(\"/\");\n  }\n\n  return (\n    <main className=\"AddDiv\">\n      {isAdded && <Redirect to=\"/\" />}\n\n      <div className=\"divHeader\">\n        <h1>Lägg till film</h1>\n        <button onClick={redirect}>Se alla filmer</button>\n      </div>\n      <Form\n        genres={genres}\n        newMovie={newMovie}\n        handleSubmit={onClickAddMovie}\n        submitButtonText=\"Lägg till\"\n        handleChange={handleChange}\n        onChangeGenre={onChangeGenre}\n        errorMsg={errorMsg}\n      />\n    </main>\n  );\n}\n\nexport default Add;\n\n\n/*   <select onChange={onChangeGenre}>\n          <option value=\"Välj genre\" disabled selected>\n            Välj genre\n          </option>\n          {genres.map((genre) => {\n            return (\n              <option key={genre.id} value={genre.title.rendered}>\n                {genre.title.rendered}\n              </option>\n            );\n          })}\n        </select> */\n\n{\n  /* <form>\n        <label name=\"title\">Filmtitel</label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          onChange={handleChange}\n          value={newMovie.title}\n        />\n        <label name=\"recension\">Recension</label>\n        <textarea\n          name=\"recension\"\n          onChange={handleChange}\n          value={newMovie.recension}\n        />\n        <label name=\"rating\">Rating</label>\n        <input\n          type=\"number\"\n          name=\"rating\"\n          onChange={handleChange}\n          value={newMovie.rating}\n        />\n        <br />\n        <label name=\"genre\">\n          <strong>Genre</strong>\n          {genres.map((genre) => {\n            return (\n              <label key={genre.id}>\n                {genre.name}\n                <input\n                  type=\"checkbox\"\n                  value={genre.name}\n                  onChange={onChangeGenre}\n                  name=\"genre\"\n                  id={genre.id}\n                />\n              </label>\n            );\n          })}\n        </label>\n        <input type=\"submit\" value=\"Färdig\" onClick={onClickSubmit} />\n      </form> */\n}\n","/Users/annaeklov/Documents/Sites/frontend/src/components/Movie.js",["51","52","53","54"],"import react, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Movie() {\n  return <div className=\"MovieDiv\"></div>;\n}\n\nexport default Movie;\n","/Users/annaeklov/Documents/Sites/frontend/src/components/Form.js",["55","56","57","58"],"import react, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n\nfunction Form({\n  genres,\n  newMovie,\n  handleChange,\n  handleSubmit,\n  onChangeGenre,\n  submitButtonText,\n  result,\n  errorMsg,\n}) {\n  if (newMovie.genres) {\n    let mappedGenreId = genres.map((genre) => {\n      return genre.id;\n    });\n\n    console.log(\"mappade GenreId\", mappedGenreId);\n    const intersection = newMovie.genres.filter((element) =>\n      mappedGenreId.includes(element)\n    );\n    console.log(\"intersection\", intersection);\n\n    intersection.forEach((element) => {\n      console.log(element);\n    });\n  }\n\n  return (\n    <FormWrapper>\n      <form>\n        <label className=\"inputs title\" name=\"title\">\n          Filmtitel\n          <input\n            type=\"text\"\n            name=\"title\"\n            onChange={handleChange}\n            value={newMovie.title}\n            required\n            autofocus\n          />\n        </label>\n        <label className=\"inputs recension\" name=\"recension\">\n          Recension\n          <textarea\n            name=\"recension\"\n            onChange={handleChange}\n            value={newMovie.recension}\n            required\n          />\n        </label>\n        <label className=\"inputs rating\" name=\"rating\">\n          Rating\n          <input\n            type=\"range\"\n            name=\"rating\"\n            min=\"0\"\n            max=\"5\"\n            onChange={handleChange}\n            value={newMovie.rating ? newMovie.rating : (newMovie.rating = \"0\")}\n            required\n          />\n          {newMovie.rating ? newMovie.rating : <span>0</span>}\n          <span>/5</span>\n        </label>\n        <br />\n        <label className=\"genre\" name=\"genre\">\n          <p>Välj en eller fler genres</p>\n          <br />\n          {genres.map((genre) => {\n            return (\n              <label key={genre.id}>\n                {genre.name}\n                <input\n                  type=\"checkbox\"\n                  value={genre.name}\n                  onChange={onChangeGenre}\n                  name=\"genre\"\n                  id={genre.id}\n                />\n                <br />\n              </label>\n            );\n          })}\n        </label>\n        <div className=\"submitBtnDiv\">\n          <input\n            className=\"submitBtn\"\n            type=\"submit\"\n            value={submitButtonText}\n            onClick={handleSubmit}\n          />\n        </div>\n      </form>\n      {errorMsg === \"checkbox\" && <p className=\"error\">Välj minst en genre</p>}\n      {errorMsg === \"emptyInput\" && (\n        <p className=\"error\">Input kan inte vara tomt</p>\n      )}\n    </FormWrapper>\n  );\n}\n\nexport default Form;\n\nconst FormWrapper = styled.div`\n  width: 80%;\n  height: auto;\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  .error {\n    color: red;\n  }\n\n  form {\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n  }\n  .inputs {\n    margin: 7px 0 0 0;\n  }\n  .title {\n    input {\n      width: 100%;\n      height: 20px;\n      border: none;\n      border-bottom: 2px solid #a3c3d8;\n      background-color: #e3eef5;\n      outline: none;\n      margin-top: 5px;\n      font-family: \"Roboto\", sans-serif;\n    }\n  }\n  .recension {\n    textarea {\n      width: 100%;\n      height: 70px;\n      border: none;\n      border-bottom: 2px solid #a3c3d8;\n      background-color: #e3eef5;\n      outline: none;\n      margin-top: 5px;\n      font-family: \"Roboto\", sans-serif;\n    }\n  }\n  .genre {\n    margin-bottom: 5px;\n    p {\n      margin: 5px 0 -10px 0;\n    }\n  }\n  .submitBtnDiv {\n    display: flex;\n    justify-content:center;\n  }\n  .submitBtn {\n    width: 116px;\n    height: 49px;\n    box-shadow: 0px 10px 10px -7px #80a4c0;\n    background-color: #d0e2eb;\n    border-radius: 15px;\n    border: 2px solid #a3c3d8;\n    display: inline-block;\n    cursor: pointer;\n    color: #456289;\n    font-size: 16px;\n    padding: 6px 12px;\n    text-decoration: none;\n\n    :hover {\n      background-color: #80a4c0;\n      color: #d0e2eb;\n    }\n  }\n`;\n","/Users/annaeklov/Documents/Sites/frontend/src/components/Edit.js",["59","60"],"import react, { useState, useEffect } from \"react\";\nimport { useHistory, Redirect, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Form from \"./Form\";\nimport styled from \"styled-components\";\n\nfunction Edit({ token }) {\n  const [getMovie, setGetMovie] = useState();\n  const [genres, setGenres] = useState([]);\n  const [checkedGenres, setCheckedGenres] = useState([]);\n  const [isAdded, setIsAdded] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  const { id } = useParams();\n  let history = useHistory();\n\n  useEffect(() => {\n    getMovieApi();\n    getGenresApi();\n  }, []);\n\n  function getMovieApi() {\n    axios\n      .get(`http://localhost:8888/aewordpress/wp-json/wp/v2/movies/${id}`)\n      .then((response) => {\n        let movie = {\n          title: response.data.title.rendered,\n          status: \"publish\",\n          recension: response.data.acf.recension,\n          rating: response.data.acf.rating,\n          genres: response.data.genres,\n          acf: {\n            genrecustom: [\n              response.data.acf.genrecustom.map((x) => {\n                return x.name;\n              }),\n            ],\n          },\n        };\n\n        setGetMovie(movie);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setGetMovie({ ...getMovie, [name]: value });\n  }\n\n  let result;\n\n  if (getMovie) {\n    result = getMovie.genres.filter((x) => {\n      return genres.some((genre) => {\n        return x === genre.id;\n      });\n    });\n  }\n\n  function getGenresApi() {\n    axios\n      .get(\"http://localhost:8888/aewordpress/wp-json/wp/v2/genres\")\n      .then((response) => {\n        setGenres(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  function onChangeGenre(e) {\n    const isChecked = e.target.checked;\n    if (isChecked) {\n      let idInt = parseInt(e.target.id);\n      setCheckedGenres([...checkedGenres, idInt]);\n    } else if (!isChecked) {\n      let filteredGenre = checkedGenres.filter((genre) => {\n        return genre !== parseInt(e.target.id);\n      });\n      setCheckedGenres(filteredGenre);\n    }\n  }\n\n  function putMovie() {\n    let item = {\n      title: getMovie.title,\n      status: \"publish\",\n      genres: checkedGenres,\n      fields: {\n        genrecustom: checkedGenres,\n        recension: getMovie.recension,\n        rating: getMovie.rating,\n      },\n    };\n    axios\n      .put(\n        `http://localhost:8888/aewordpress/wp-json/wp/v2/movies/${id}`,\n        item,\n        {\n          headers: { Authorization: \"Bearer\" + token },\n        }\n      )\n      .then((resp) => {\n        console.log(\"resp.data i PUT\", resp.data);\n        if (resp.status === 200) {\n          setIsAdded(true);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  function onClickEditMovie(e) {\n    e.preventDefault();\n    console.log(checkedGenres.length);\n    if (checkedGenres.length > 0) {\n      console.log(\"tom\");\n      if (getMovie.title.trim() === \"\" || getMovie.recension.trim() === \"\") {\n        return setErrorMsg(\"emptyInput\");\n      }\n      putMovie(token);\n    } else {\n      setErrorMsg(\"checkbox\");\n    }\n  }\n  function redirect() {\n    history.push(\"/\");\n  }\n\n  return (\n    <main className=\"EditDiv\">\n      {isAdded && <Redirect to=\"/\" />}\n\n      <div className=\"divHeader\">\n        <h1>Ändra film</h1>\n        <button onClick={redirect}>Tillbaka</button>\n      </div>\n      {getMovie && (\n        <Form\n          newMovie={getMovie}\n          genres={genres}\n          handleSubmit={onClickEditMovie}\n          submitButtonText=\"Ändra\"\n          result={result}\n          handleChange={handleChange}\n          onChangeGenre={onChangeGenre}\n          errorMsg={errorMsg}\n        />\n      )}\n\n      {getMovie && getMovie.acf.genrecustom && (\n        <GenresInEdit>\n          <ul>\n            Valda genres innan edit:\n            {getMovie.acf.genrecustom.map((genreName) => {\n              return genreName.map((name) => {\n                return <li>{name} </li>;\n              });\n            })}\n          </ul>\n        </GenresInEdit>\n      )}\n    </main>\n  );\n}\n\nexport default Edit;\n\nconst GenresInEdit = styled.div`\n  width: 80%;\n  height: auto;\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n   ul {\n    padding: 0;\n    list-style: none;\n  }\n`;\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":13},{"ruleId":"69","severity":1,"message":"70","line":85,"column":6,"nodeType":"71","endLine":85,"endColumn":8,"suggestions":"72"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":13},{"ruleId":"65","severity":1,"message":"73","line":2,"column":22,"nodeType":"67","messageId":"68","endLine":2,"endColumn":30},{"ruleId":"74","severity":1,"message":"75","line":57,"column":13,"nodeType":"76","endLine":57,"endColumn":42},{"ruleId":"74","severity":1,"message":"75","line":59,"column":13,"nodeType":"76","endLine":63,"endColumn":15},{"ruleId":"65","severity":1,"message":"66","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":13},{"ruleId":"65","severity":1,"message":"77","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":14},{"ruleId":"78","severity":1,"message":"79","line":140,"column":1,"nodeType":"80","messageId":"81","endLine":182,"endColumn":2},{"ruleId":"65","severity":1,"message":"66","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":13},{"ruleId":"65","severity":1,"message":"82","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"83","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"65","severity":1,"message":"84","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":13},{"ruleId":"65","severity":1,"message":"66","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":13},{"ruleId":"65","severity":1,"message":"82","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"83","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"65","severity":1,"message":"84","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":13},{"ruleId":"65","severity":1,"message":"66","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":13},{"ruleId":"69","severity":1,"message":"85","line":20,"column":6,"nodeType":"71","endLine":20,"endColumn":8,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'Redirect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'styled' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'getMovieApi'. Either include it or remove the dependency array.",["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [getToken]",{"range":"95","text":"96"},"Update the dependencies array to be: [getMovieApi]",{"range":"97","text":"98"},[1932,1934],"[getToken]",[613,615],"[getMovieApi]"]